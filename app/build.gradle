apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.config.compileSdkVersion
    buildToolsVersion rootProject.ext.config.buildToolsVersion

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    defaultConfig {
        applicationId "cvnhan.android.cvnframework"
        minSdkVersion rootProject.ext.config.minSdkVersion
        targetSdkVersion rootProject.ext.config.compileSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Configure for RetroLambda
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':core')
    compile project(':mvp')

    def dependency = rootProject.ext.dependency
    compile dependency.appcompatv7
    compile dependency.recyclerviewv7
    compile dependency.cardviewv7

    // Inject dependencies
    compile dependency.dagger
    apt dependency.daggerCompiler
    provided dependency.generatedAnnotation;

    // View Inject dependencies
    compile dependency.butterknife

    // Log
    compile dependency.timber

    // RxAndroid
    compile dependency.rxAndroid

    // ImageLoader
    compile dependency.picasso

    compile dependency.otto
}
apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0].processResources.manifestFile
    }
}